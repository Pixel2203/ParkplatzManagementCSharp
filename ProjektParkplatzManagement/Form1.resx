<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA2JQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAIAAAACAAgGAAAA9HjU+gAAIABJ
        REFUeJzt3XuUnmV57/HvTMgBkpAj4WCOEAnkhJyUk4oICFKsioitRdEi29a9Ksjutv/sVd3bdrm02Gq7
        W1HZVTzWA1YFQSGCQgTEgBIIByVAQA45QyDkQDL7j3tSxjhJ5p153+e6n+f+fta6V6ZZdc2PzLzvdb3X
        cz/304WkOtsfmAm8DNgPmAxM6rMmA+OB4UBX79cAI4DRvV8/D2zp/Xo90ANs7f16NbCmz1oNrAJ+BzwM
        rOzUf5ikzuqKDiBpjw4AFgILgFmkgr/jz33CUiUbSY3AI71/Pgws7V1PxcWStCc2AFI+uoF5wNGkYr8Q
        OIL0yb6OVgJ3966lwBLgXmB7ZChJiQ2AFGc0cCRwInAScAIwMTRR5z0H/Bq4BVgM/Ax4JjSRVCgbAKk6
        ewHHA2cCp5KK/16hieK9CNwJ3ABcC9zW+3eSJNXaFOBc4EpgLWmDnWvX6zngB8BFwNRB/HtLkhRmOnAp
        8AvS9e7oolrXtR24HfgQMK2ln4AkSRV5GfBB0rVti35n1r3Ah4GDBvgzkSSpI0YB7wRuBLYRXyBLWduA
        RcCf9v4MJEmqxBzg46QDcaKLYelrHXA56XZJSZLabgTwLtKta9FFz9X/ugU4v/dnJUnSkOxLurb/GPEF
        zjWw9RTwEZp/poIkqQNmkcb8O87Gd9VvbSBdHjgUSZL2YC7wDdJhNNEFzNWe9SLwNeAwJEnayUzSp0UL
        f3PXNuCbOBGQJJEO7bmc9Pjb6ALlqmZtJZ3MeAiSpOJMBD4DbCa+ILli1mbg07hZUJKKsBfpnPmVxBcg
        Vx5rLelOj9IfzCRJjfV60rPpowuOK891P/BGJEmNMYv0hLnoAuOqx/pPYAaSpNrqJo37NxBfVFz1Ws+T
        Hjw0DElSrSwAbiO+kLjqve4EjkKSlL3hpE9u7u53tWttIZ0KORJJUpaOAO4hvmC4mrmWAguRJGWji3Qb
        1ybii4Sr2WsTacLUjSQp1P7ANcQXBldZ63rgICRJId4MrCK+GLjKXCuBs5EkVWYYaVPWduKLgKvstZ10
        nLCnCEpSh00mjV+j3/hdrr7rJtLlKKk2uqIDSC04CvgO6dG9Um4eB94G3B4dRBoId7KqLi4Efo7FX/ma
        SpoEvDc4hyQ1QhfwEeJHvC5XK+vT+AFLkgZtFPAN4t/MXa7BrKuAfZAy5R4A5WoS8D3gxOgg0hDcDryJ
        dMuglBUbAOVoNvBD4OXRQaQ2eBh4I3B/dBCpLxsA5eZY4DpgYnQQqY3WAGcAv4wOIu3gJhXl5CTgBiz+
        ap5JwI3AKdFBpB1sAJSLk4FrgX2Dc0idMgb4AXB6dBAJbACUh7NIxX9MdBCpw/YhNQFvjQ4iDYsOoOK9
        HfgmMDI6iFSRYaQG4H5gWXAWFcxNgIr0JuDbwPDoIFKAraSjg78fHURlsgFQlFNJo9BR0UGkQFtIj7W+
        NjqIymMDoAgnAD/Ca/4SwEbgTOBn0UFUFhsAVe1I4CfA+OggUkaeJU3F7ogOonLYAKhKhwGL8T5/qT9r
        SEdfPxAdRGWwAVBVJgO3ko75ldS/h4Hj8NkBqoDnAKgKe5N2Olv8pd2bBVyNTxFUBWwA1GndwFeA46OD
        SDVxLPAlfH9Wh3kQkDrtMuC90SGkmplLmgJcHx1EzWUDoE66EPj76BBSTZ0IrAB+FR1EzeQmQHXKK0n3
        NXvErzR4m4DX4O2B6gAbAHXCJNJzz2cG55CaYAVwDLAqOoiaxU0mardhwNew+EvtMh34Ol6yVZv5C6V2
        +wRwfnQIqWEOJj00a1F0EDWHlwDUTm8GrsLfK6kTeoCzgWuig6gZfKNWuxwE/Jp04p+kzlgFLASeig6i
        +nMPgNqhC/gCFn+p0/YDvogf3tQG7gFQO1wKfCA6hFSI2cBa4PboIKo3u0gN1XzSPcqjooNIBdlMOmvj
        7uggqi8bAA3FSGAJMC86iFSgpaTnBmyODqJ68hKAhuKjwDnRIaRC7Q9sA24KzqGacgKgwVpA+vQ/PDqI
        VLAtwFHAvdFBVD/eBaDB6AYux+IvRRsBXIHTXA2CvzQajEuAP48OIQmAqcBq4BfRQVQvXgJQq2YA9wBj
        ooNI+i/Pky7LPRwdRPXhJQC16l+w+Eu5GQ1cFh1C9eIEQK14PXBDdAhJu/QG4MfRIVQPNgAaqL2Au0gH
        /0jK0zLgCODF6CDKn5cANFB/icVfyt1c4MLoEKoHJwAaiAnAb4BJ0UEk7dFa4FBgTXQQ5c3bADUQnwBO
        jg4haUD2Jp3R8aPoIMqbEwDtyQzgQdKBI5LqYQswB3gkOIcy5gRAe/Ip4JjoEJJaMow0Cbg6Oojy5QRA
        uzMbuI90B4CketkKHAYsjw6iPDkB0O58BnhFdAhJgzIMGAd8LzqI8uQEQLsyF7gbm0SpzraRbt+9PzqI
        8uObu3bln0lni0uqr27SbbxXRQdRfpwAqD+zSPf92yBK9beNdC6AewH0ezwJUP25BIu/1BTDgP8eHUL5
        cQKgnU0AVuAT/6Qm2QBMB9ZHB1E+nABoZ3+BxV9qmrHAf4sOobw4AVBfI0gnhx0YnENS+z1B2t+zJTqI
        8uAEQH29A4u/1FQHAedFh1A+bADUlyNCqdkuig6gfHgJQDscDiyLDiGp4+bha104AdBL/PQvleHPowMo
        D04ABDASeByYHB1EUsetAV4GbI4OolhOAATwNiz+UikmAW+ODqF4NgACuDA6gKRKvS86gOJ5CUAHksb/
        NoNSObYD00hnA6hQvunrPPw9kErTDZwTHUKxfOOXB4NIZXp7dADF8hJA2aYBj+LvgVSiHmAm6eFfKpAT
        gLK9A4u/VKouvAxQNBuAsp0bHUBSKC8BFsxPf+U6EPgd/g5IJeshHQr0ZHQQVc8JQLnOxOIvla4LOD06
        hGLYAJTrzOgAkrJwRnQAxfATYJn2AlYB46ODSAq3DtgP2BYdRNVyAlCm47H4S0omAK+MDqHq2QCUyfG/
        pL68DFAgG4AynRYdQFJW3AhYIPcAlGc0sJ60D0CSALaSLgtujA6i6jgBKM+rsPhL+n3DgWOjQ6haNgDl
        OTE6gKQs+d5QGBuA8vgil9Qf3xsK4x6AsnQDa4Fx0UEkZWc9MAnYHh1E1XACUJZ5WPwl9W88MDc6hKpj
        A1CWY6IDSMra0dEBVB0bgLIsiA4gKWu+RxTEBqAsC6MDSMqaDUBBbADK4otb0u74IaEgNgDlOAiYEh1C
        UtYOwPeJYtgAlMPOXtJAOCkshA1AOby9R9JAzI8OoGrYAJTj4OgAkmphVnQAVcMGoBy+qCUNhO8VhbAB
        KMfM6ACSamFmdABVw2cBlOM5YHR0CEnZ2wDsGx1CnecEoAz7Y/GXNDBjSQ8FUsPZAJRhZnQASbXiPoAC
        2ACUYWp0AEm1Mi06gDrPBqAM+0UHkFQrk6MDqPNsAMrgi1lSK3zPKIANQBnc0COpFb5nFMAGoAy+mCW1
        wveMAtgAlMFxnqRW+J5RABuAMtjNS2qF7xkFsAEow9joAJJqxZMAC2ADUIaR0QEk1cqI6ADqPBuAMvhi
        ltQKPzQUwAagDDYAklphA1AAG4Ay+GKW1Ao/NBTABqAMvpgltcIPDQWwASiDDYCkVtgAFMAGQJKkAtkA
        lGFLdABJtbI5OoA6zwagDDYAklphA1AAG4Ay+GKW1Ao/NBTABqAMvpgltcIPDQWwASiDDYCkVtgAFMAG
        oAy+mCW1wg8NBbABKMOz0QEk1coz0QHUeTYAZVgTHUBSrfieUQAbgDKsjg4gqVZ8zyiADUAZfDFLaoXv
        GQWwASiD4zxJrfA9owA2AGXwxSypFb5nFMAGoAyO8yS1wgagADYAZXg8OoCkWnksOoA6zwagDA9HB5BU
        K75nFKArOoAq8xwwOjqEpOxtAPaNDqHOcwJQjkejA0iqBT/9F8IGoBy+qCUNhO8VhbABKMcj0QEk1YIN
        QCFsAMqxPDqApFqwASiEDUA57okOIKkWlkYHUDVsAMpxd3QASbXgh4VC2ACU4ylgZXQISVl7AlgVHULV
        sAEoi1MASbvj+L8gNgBlsQGQtDu+RxTEBqAsdveSdsf3iILYAJRlSXQASVm7KzqAquOzAMrSTXo08ITo
        IJKysw6YDGyPDqJqOAEoy3bg9ugQkrL0cyz+RbEBKM/i6ACSsuR7Q2FsAMrji1xSf26JDqBquQegPPsA
        64Hh0UEkZWMLaW/Qxuggqo4TgPJsBH4VHUJSVpZg8S+ODUCZro8OICkrP44OoOrZAJTp2ugAkrJyXXQA
        Vc89AGUaRnow0MToIJLCrQWmANuig6haTgDKtA1YFB1CUhZ+hMW/SDYA5fIygCRw/F8sLwGU6wDSs7/9
        HZDK1QO8DHgyOoiq5wSgXE8Bd0SHkBTqdiz+xbIBKNs3owNICvWN6ACK4/i3bNOAR/H3QCrRdmA68Lvo
        IIrhBKBsjwG3RoeQFOIWLP5FswHQf0QHkBTCS4CFc/SrA4DHSYcDSSrDdtIlwCeigyiOEwA9Bfw0OoSk
        Sv0Ei3/xbAAEcEV0AEmV+nx0AMXzEoAARpIuA0yODiKp49aQDv/ZHB1EsZwACNIbwVeiQ0iqxBex+Asn
        AHrJYcAy/J2Qmm4e6bWuwjkB0A7345kAUtPdgsVfvWwA1NdnowNI6qjLowMoH4571ddwYDkwNTqIpLb7
        HXAwsCU6iPLgBEB9bQX+b3QISR3xaSz+6sMJgHY2nvSMgDHRQSS1zQbSg3/WRwdRPpwAaGfr8WAgqWk+
        h8VfO3ECoP7MBH4D7BWcQ9LQbQVmAyuigygvTgDUn0eAb0eHkNQW/4HFX/1wAqBdORS4F6cAUp1tIx38
        80B0EOXHCYB25UHg69EhJA3Jl7D4axecAGh3DgHuI50PIKletpKO+F4eHUR5cgKg3XkIuDI6hKRBuQKL
        v3bDCYD2ZDrpcsDI6CCSBmwTaR/PY9FBlC8nANqTFXh+uFQ3/4rFX3vgBEADMYE0BZgcHUTSHq0E5uDB
        P9qDYdEBVAubgI3AG6ODSNqjS4CfR4dQ/pwAaKCGAXcBC6KDSNqlXwHHkO7/l3bLPQAaqG3AxdEhJO3W
        xVj8NUA2AGrFT4DvRYeQ1K9vAz+NDqH68BKAWjWddESwjwuW8vEsMB93/qsFbgJUq54BXgDOiA4i6b98
        CFgUHUL14gRAg9EN3AycEB1EErcBJwLbo4OoXmwANFjzgSXAiOggUsG2AEcCy6KDqH68BKDBWkkq/q+N
        DiIV7P+QNv9JLXMCoKEYCfySNA2QVK27gWNJUwCpZd4GqKHYDLyDtClQUnU2Aedj8dcQeAlAQ7WKdEzw
        G6KDSAW5BPhBdAjVm5cA1A5dpDejs6KDSAW4jvRcjp7oIKo3GwC1yxTSNcn9o4NIDbYSOAJ4KjqI6s89
        AGqXlcD78FOJ1Ck9wAVY/NUm7gFQOz0IjAJOig4iNdDHgM9Hh1BzeAlA7dYNXINHBUvtdAPpNeWT/tQ2
        NgDqhImk8wFmRQeRGuBR4BhgdXQQNYt7ANQJa4G34vkA0lBtAs7B4q8OcA+AOuUp4Engj6ODSDV2IXBt
        dAg1kw2AOukuYAw+NVAajI8Dl0WHUHPZAKjTbgBeDiyIDiLVyLeAv8TbatVBbgJUFUYBi3ASIA3EL4DX
        kY7YljrGBkBVmQz8nDQNkNS/5cDxpIO1pI7yLgBVZTVwNrAmOoiUqdWke/0t/qqEDYCq9ABwKrAuOoiU
        mWeBM4HfRAdROWwAVLVfkZ4a+Fx0ECkTG0nTsV9GB1FZbAAU4VbgzaRDTqSSbSEd9POz6CAqjw2AoiwC
        3kJ6A5RKtBV4G3BddBCVyXMAFOm3pH0Bb8bfRZVlK/BO4LvRQVQubwNUDs4Cvk06L0Bqus3An2DxVzAb
        AOXiZOD7wNjgHFInbSRNvK6PDiLZACgnJwFXA+Oig0gd8Axp2rU4OogENgDKzzGkTVGTooNIbbQaeANw
        Z3QQaQfvAlBufgm8CngwOojUJstJ0y2Lv7JiA6AcPUR6cNDN0UGkIbqNdLb/A9FBpJ3ZAChXa4DTgK9H
        B5EG6TvAKXi2vzLlvdfK2Tbgqt6vTw7MIbXqM8CFpPv9JUlD8B7gBaDH5cp4bQTejVQD3gWgOjmSNFad
        FR1E6sdjpHP974gOIklNNIl0m2D0Jz2Xq+/6CTAFqUbcA6C6eQH4au+fp+AUS7F6gE8AF+AjriWpMmcB
        TxP/6c9V5noKOBNJUogpwA+ILwaustaPgAORJIXqAi4Cnie+MLiavV4APoiXniQpKwuAu4kvEq5mrl8D
        85AkZWk48GFgE/EFw9WMtQX4ODASSVL2Xg7cSHzxcNV7LQbmIkmqlR17A54lvpC46rWeJ02SvFVakmps
        OumZAtFFxVWP9S1gKpKkxjgZ+BXxBcaV51oGvAFJUiN1A+/CA4RcL601pFv7HPdLUgEmAJ/CuwVKXi8A
        lwHjkSQVZyrwaWwESlpbgCvxqZKSJGAGcDmwlfgC5erM2gZ8E5iNJEk7mQN8BRuBJq0twJdJZ0NIkrRb
        BwIfAdYRX8Bcg1sbSJd3piNJUovGknaIryC+oLkGtp4kNW8T/vDHKUlSa0YA5wM3E1/gXP2vm4E/6/1Z
        SZLUdnNID4dZSXzRK32tI23eXLjbn5gkSW00EngHcAPwIvHFsJT1IvBj4Dx8Qp8kKdgk0gmD15NuN4su
        kk1b24BbSPsxDhzgz0SSpEpNBS4BbgO2E18867q2A7cCFwMva+knIGmPuqIDSA23H+khRKcCbwIOCE2T
        v7XAItJllWuA38XGkZrLBkCqzjDglcCZpIbgGGB4aKJ4W4AlpEsn1wJ3kMb9kjrMBkCKM5y0e/0k4ETg
        FNJegibbANwOLCZd019MeiiPpIrZAEj56AbmAkcD84EjgAXU97LBk8BS4O7eP+8ElpGu7UsKZgMg5W8/
        0qRgHnAIMJP0JLuZpJMKI20AHgEe7l0PkYr8r4HVcbEk7YkNgFRvk0nNwFTS5YP9ev+c3PvnJFKTsE/v
        //840qRhODCm9++eIz38aDvwTO/fbSQV9zWkQr6md63q/fMxUuG3yEuSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJBWrKzqAVFMjgcnApD5r5/97IjABGNX7v9kXGEZ63Y3v/bsRwOjKUufleWBL79frgR7g
        RWBD799tAtYBa4C1vX+uAVbt9Hergc2VpZYawgZA6t8IYCpwMHAQcGDv1zvWDFIxVx7WAcv7rCeBJ3q/
        fgB4Li6alCcbAJVuNDAPWAjMBxYAh5EKvq+PZughNQT3AfcAS4G7gWWkKYRUJN/gVJLZwCtIRX4BqejP
        ArojQynMdtKE4G5eagzuAh6KDCVVxQZATbUXcARwEnAi8FpgSmgi1cXTwB3AEuAWYDHwQmgiqQNsANQU
        BwAnkIr98cDRpOv40lBtJjUDt5KagZ+TmgSp1mwAVFfDSOP8s4E/Ao7C32dVZzlwNfAD4Ga8C0E15Bum
        6mQWcBpwKnA6MC42jgTARtJU4Grge8AjoWmkAbIBUM66Sdfw3wKcCcyJjSMNyP3AtcB3SZcMtsfGkfpn
        A6DcdJOu5Z8LvI10D75UV6uBq4Avk6YENgPKhg2AcjGPVPTPJx20IzXN46Rm4FukyUBPbByVzgZAkRYC
        F5A+6U+LjSJVagWpEfgi6QwCqXI2AKra3qRd+xeRNvNJpVsCfA74Gh5ZrArZAKgqR5OK/p8AY4OzSDna
        APwncCVwQ3AWFcAGQJ00DjgPeD9wZHAWqU7uA74EXEHaSChJtXAw8GnSg1Z6XC7XoNcm0kTgcCQpY0eT
        3qxeJP6N0+Vq0tpGOnXQfTOSstFNOo53x21NLpers2sJ8C7SA6+kQXMPgAZrDPBe4GLSEb2SqrUc+Efg
        30mX26SW2ACoVSOBdwMfJT2BT1Ks1cA/AJ/BxxarBTYAGqgRpEN7/haP55VytAq4jLQBd1NwFtWADYD2
        ZDjp3v2/xSN6pTp4jNQIfBYfU6zdsAHQrnQD5wB/D8wOziKpdY+SXr//j3RnjvR7bADUnzcBnwQOjQ4i
        acjuB/4auDo6iPJiA6C+5gCfAt4YHURS2y0CLgGWRgdRHrqjAygLE0gbh+7B4i811euBO4HLgcnBWZSB
        YdEBFGov4ELgu8Ap2BBKTddNOrHzQtIGwSXA9tBECuMlgHKdAvwTsCA6iKQw95MuC1wXHUTVswEoz/6k
        A0PeHh1EUja+DnyQdJaACuElgLKcC1wDHBsdRFJWFpAuC6wjXRZQAZwAlGEmaePP6cE5JOXvOuD9pHME
        1GBOAJqtG3gfaZPf3OAskuphNnAR6RHEt5GeQKgGcgLQXPOALwDHRQeRVFu3ki4NLIsOovZzAtA83cDf
        kDb1zAjOIqneppEagK2kZsBpQIM4AWiWacCVwMnBOSQ1z43Au4DHo4OoPTz4pTneCtyFxV9SZ7yOdIzw
        O6KDqD1sAOpvb9Ixvt8BJgVnkdRs40mXF68ERgdn0RB5CaDejga+hk/tk1S9+4F3kp4voBpyE2A9dZMe
        7/lVYEpwFkllmgxcAGwk3S6omnECUD9jgS8Bb4kOIkm9rgbOB9ZHB9HA2QDUyxzSoT6HRweRpJ08SNqM
        fG90EA2MmwDr42zgdiz+kvJ0KOmsgHOig2hg3AOQvy7gw8DnSTv+JSlXI0kPHdsb+AkeHJQ1LwHkbV/g
        y8CbooNIUouuJd0lsC46iPpnA5CvhcBVwCHRQSRpkH5L2rB8T3QQ/SH3AOTpNOBmLP6S6m02aV/AG6OD
        6A+5ByA/7yGdtLVPdBBJaoMRwHnASmBJcBb1YQOQjy7gI8A/4s9FUrN0A39E2hy4KDiLello8rAX8Fng
        Q9FBJKmDTgJmAtcA22OjyE2A8cYA3wLOiA4iSRVZRDov4JnoICWzAYh1EKkTfkV0EEmq2D2kzYGPRQcp
        lQ1AnMOA64Gp0UEkKchjpLueHogOUiIbgBiHk0ZgB0YHkaRgK4FTgaXRQUrjOQDVOxL4GRZ/SYL0SPOf
        AsdGBymNDUC1jgZuID1HW5KUTAB+DBwXHaQkNgDVOYn0cIyJ0UEkKUPjSfuiXhcdpBQ2ANV4DfBD0sN9
        JEn9GwNcTdoToA6zAei8M4DrgLHRQSSpBvYhNQE+BbXDvAugs04Hvk96RrYkaeA2k5qAH0cHaSobgM45
        jnQ9a0x0EEmqqY2kKerN0UGayAagMxYCN5F2tkqSBu8Z4BTgzuggTWMD0H4vJ93nf0B0EElqiFXAa4H7
        ooM0iQ1Ae00jjapmRAeRpIZ5HHg18EhwjsbwLoD2mULarGLxl6T2m0raV+V0tU1sANpjHOlWv8Oig0hS
        g80mfdDyQLU2sAEYur2Ba0ln/EuSOmsB6fbqUdFB6s4GYGi6gC8Ax0cHkaSCnAhcifvYhmRYdICa+xjw
        gegQklSgeaQG4KbgHLVlAzB47wY+FR1Ckgr2GmA5cHd0kDpyfDI4rybtRvWIX0mKtRV4A3BjdJC6sQFo
        3cHAbcB+0UEkSQCsIe3F+k10kDqxAWjNROBW4NDoIJKk3/MQ6Rksq6OD1IV3AQzccOAqLP6SlKNDgG+R
        3qs1AG4CHLh/At4eHUKStEszgbHAj4Jz1IINwMCcB3wyOoQkaY+OIz006N7oILlzD8CezQF+AewbHUSS
        NCDPAa8ClkUHyZkNwO6NAW4H5kYHkSS15AHgWGBDdJBcuQlw9/4Ni78k1dEc4HPRIXLmHoBd+yDwP6ND
        SJIGbT7ptsA7ooPkyEsA/TsO+CkwIjqIJGlItgKvAxZHB8mNDcAfmgj8GpgaHUSS1BYrgCOA9dFBcuIe
        gD/0r1j8JalJppMe3a4+3APw+84H/ld0CElS280FHgTuiQ6SCy8BvGQq6ZGSE6KDSJI6Yj3pUsCK6CA5
        8BJA0g1cicVfkppsPPBlrH2AlwB2uBS4KDqEJKnjZpAmAbdFB4nmJQCYB/wSGBUdRJJUic2kUwKXRgeJ
        VPoYZCTwVSz+klSSkaTLvkWf9VL6JYD/DZwbHUKSVLkDSFPwG6ODRCn5EsB84E5geHQQSVKILcBRFPro
        4FIvAXQDn8XiL0klGwFcQaG1sNRLAO8H/iI6hCQp3FTgCWBJdJCqlXgJ4ADgPtL9oJIkPUM6KfCJ6CBV
        KnHs8c9Y/CVJLxkH/EN0iKqVNgE4E/hhdAhJUpbOBq6ODlGVkhqAfUgPgZgVHUSSlKVHSYfDPR8dpAol
        bQL8O+Cs6BCSpGyNJ30wXhQdpAqlTABmkTb+jYwOIknK2hbShsCHooN0WikTgM8DC6NDSJKyNwzYD/hO
        dJBOK2ECcDywmDL+WyVJQ9cDvJpUOxqr6UWxC7gFOCE6iCSpVm4j1Y6e6CCd0vRzAP4Ui78kqXXH0fCH
        xTV5AjAKuB+YER1EklRLD5M2BG6KDtIJTZ4AXIrFX5I0eLOAv4oO0SlNnQBMAX4LjI0OIkmqtWeA2cDq
        6CDt1tQJwIex+EuShm4c8D+iQ3RCEycA+wPLSUf/SpI0VM8DBwMro4O0UxMnAH+NxV+S1D6jgUuiQ7Rb
        0yYAk0m7NsdEB5EkNUrjpgBNmwD8DRZ/SVL7NW4K0KQJgJ/+JUmd1KgpQJMmAH76lyR1UqOmAE2ZAPjp
        X5JUhedJBwStig4yVE2ZAFyKxV+S1HmjacjpgE2YAOwDrAAmRQeRJBVhLTAN2BgdZCiaMAG4AIu/JKk6
        E4F3RocYqrpPALqAe4HDo4NIkoryAKn29EQHGay6TwDOxOIvSareHOD06BBDUfcG4OLoAJKkYtW6BtX5
        EsA8YCn1/m+QJNVXDzAfWBYdZDDqPAG4GIu/JClOFzW+JbCuBXQy6da/vaODSJKK9gIwHVgdHaRVdZ0A
        XIDFX5IUb2/g3dEhBqOuE4B7gbnRISRJItWk+dEhWlXHCcAR00LBAAAE8UlEQVQJWPwlSfmYB7wqOkSr
        6tgAvCc6gCRJO6ldbarbJYDRwBPAvtFBJEnq41ngQGr0fIC6TQDOxeIvScrPvsA50SFaUbcG4L3RASRJ
        2oVaXQao0yWAl5MevlCnzJKkcvSQatVD0UEGok4TgPdg8Zck5auLGp0JUKeCuhyYFR1CkqTdeBg4ODrE
        QNRlAnAsFn9JUv5mAUdGhxiIujQAtdpZKUkqWi1qVl0uAfwGmB0dQpKkAXgQmBMdYk/qMAE4Eou/JKk+
        DqUGzwaoQwNQi1GKJEl9vC06wJ7UoQF4a3QASZJalP2H19wbgPnA4dEhJElqUfb1K/cGIPsRiiRJu5D1
        FCD3BuCs6ACSJA1S1jUs59sAJwNPk3+TIklSf7YBU4C10UH6k3NxPY2880mStDvDgFOiQ+xKzgX2tOgA
        kiQN0enRAXYl50sAK4Bp0SEkSRqCR4GZ0SH6k+sEYD4Wf0lS/c0g02OBc20Ash2ZSJLUoixrmg2AJEmd
        leWethz3AIwC1gD7RAeRJKkNngcmAZujg/SV4wTgOCz+kqTmGA0cGx1iZzk2ACdEB5Akqc2Ojw6wsxwb
        gOz+kSRJGqLsaltuewC6SMf/7hcdRJKkNnoaOCA6RF+5TQBmY/GXJDXP/mR2IFBuDcBx0QEkSeqQrC4D
        5NYAZPWPI0lSG2VV42wAJEmqRlY1LqdNgKOB9cBe0UEkSeqArcB4YGN0EMhrAnAMFn9JUnMNB46KDrFD
        Tg3AwugAkiR1WDa1LqcGYH50AEmSOmxedIAdbAAkSapONrUul02AXcBa0uYISZKaah0wMToE5DMBmIbF
        X5LUfBOAg6JDQD4NQDYjEUmSOiyLmmcDIElStbKoeTYAkiRVK4s7AWwAJEmqVhY1L5e7AJ4FxkaHkCSp
        AutJmwFD5TABmITFX5JUjvHAuOgQOTQAM6MDSJJUsRnRAXJoAML/ESRJqlh47bMBkCSpejOjA9gASJJU
        vfDaZwMgSVL1wmufDYAkSdULr302AJIkVW9mdIDog4BGA88FZ5AkKcJoYGPUN4+eAEwJ/v6SJEWZHPnN
        oxuAicHfX5KkKKE1MLoBmBT8/SVJihJaA20AJEmKYQMgSVKBim4A3AMgSSqVewAkSSpQ0RMAGwBJUqmK
        bgC8BCBJKlXRlwD2Df7+kiRFGRf5zaMbgJHB31+SpCihNTC6ARgR/P0lSYoSWgOjGwAnAJKkUhXdADgB
        kCSVyksAkiQVyAmAJEkFsgGQJKlAXgKQJKlATgAkSSpQ0ROAbcHfX5KkKC9GfvPoBuCZ4O8vSVKU9ZHf
        PLoBeCj4+0uSFOW3kd88ugFYHPz9JUmKEloDoxuA7wV/f0mSooTWwK7Ibw4MA54ApgTnkCSpSk8DBwHb
        owJETwC2AZcFZ5AkqWqfJLD4Q/wEAGAU8AAwPTqIJEkVeBw4FHghMkT0BABgE3Ap0BMdRJKkDusB/org
        4g/pGnwOlpFOBXx1dBBJkjroY8C/RYeAfBoAgJuAw4D5wTkkSeqEb5A+/Wcx8c6pAegBvtP79WvJY3+C
        JElD1QN8AvgAwRv/+sqpAdjhJuAe4HhgXGwUSZKGZAXwXuBfyOST/w45NgAA95GukTwLLATGxMaRJKkl
        TwMfBd5F+lCbnTqM2buBE4A/7v3zEGACPkpYkpSHLcA60vNtFpNO+LuVjMb9/fn/1SBlgCM5uvYAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>